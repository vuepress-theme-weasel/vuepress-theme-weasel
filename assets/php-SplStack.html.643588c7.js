import{_ as n,e as s}from"./app.f3af98d4.js";const a={},t=s(`<blockquote><p>SPL\u662F\u7528\u4E8E\u89E3\u51B3\u5178\u578B\u95EE\u9898(standard problems)\u7684\u4E00\u7EC4\u63A5\u53E3\u4E0E\u7C7B\u7684\u96C6\u5408\u3002</p></blockquote><p>\u5728\u524D\u9762\u7684\u6587\u7AE0\u4E2D\uFF0C\u6211\u4EEC\u5355\u72EC\u8BF4\u8FC7\u4EC0\u4E48\u662F\u6808\uFF0C\u6808(Stack)\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u7EBF\u6027\u8868\uFF0C\u56E0\u4E3A\u5B83\u53EA\u80FD\u5728\u7EBF\u6027\u8868\u7684\u4E00\u7AEF\u8FDB\u884C\u63D2\u5165\u6216\u5220\u9664\u5143\u7D20(\u5373\u8FDB\u6808\u548C\u51FA\u6808)\uFF0CSplStack\u7EE7\u627F\u81EASplDoublyLinkedList\uFF0C\u5E76\u4E14mode\u88AB\u9650\u5236\u4E3ALIFO\uFF0C\u5373\u540E\u8FDB\u5148\u51FA\u6A21\u5F0F\u3002</p><p>\u5728php\u4E2DSplStack\u7C7B\u901A\u8FC7\u4F7F\u7528\u4E00\u4E2A\u53CC\u5411\u94FE\u8868\u6765\u63D0\u4F9B\u6808\u7684\u4E3B\u8981\u529F\u80FD\uFF0C\u5176\u4E3B\u8981\u7684\u63A5\u53E3\u5982\u4E0B,\u5DF2\u7ECF\u505A\u4E86\u8BE6\u7EC6\u7684\u8BF4\u660E:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>SplStack <span class="token keyword">extends</span> <span class="token class-name">SplDoublyLinkedList</span> <span class="token keyword">implements</span> <span class="token class-name">Iterator</span> <span class="token punctuation">,</span> ArrayAccess <span class="token punctuation">,</span> Countable <span class="token punctuation">{</span>
<span class="token comment">/* \u65B9\u6CD5 */</span>
<span class="token function">__construct</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span>
<span class="token keyword type-declaration">void</span> <span class="token function">setIteratorMode</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$mode</span> <span class="token punctuation">)</span>
<span class="token comment">/* \u7EE7\u627F\u7684\u65B9\u6CD5 */</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">void</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">add</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$newval</span> <span class="token punctuation">)</span>  <span class="token comment">// \u8BE5\u65B9\u6CD5\u662F\u5728index\u7684\u4F4D\u7F6E\u518D\u63D2\u5165\u4E00\u4E2A\u503C</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">mixed</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">bottom</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u53D6\u51FA\u6700\u540E\u4E00\u4E2A\u503C</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">int</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">count</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u8FD4\u56DE\u8BE5\u6808\u7684\u4E2A\u6570</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">mixed</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">current</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u5F53\u524D\u64CD\u4F5C\u7684\u662F\u54EA\u4E2A\u503C</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">int</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">getIteratorMode</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u5F53\u524D\u8FED\u4EE3\u7684\u7D22\u5F15</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">bool</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">isEmpty</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u5F53\u524D\u6808\u662F\u5426\u662F\u7A7A\u6808</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">mixed</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">key</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u5F53\u524Dkey</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">void</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">next</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u4E0B\u4E00\u4E2A\u9879</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">bool</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">offsetExists</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$index</span> <span class="token punctuation">)</span> <span class="token comment">// \u662F\u5426\u5B58\u5728\u9879</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">mixed</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">offsetGet</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$index</span> <span class="token punctuation">)</span> <span class="token comment">// \u83B7\u53D6\u67D0\u9879</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">void</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">offsetSet</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$index</span> <span class="token punctuation">,</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$newval</span> <span class="token punctuation">)</span> <span class="token comment">// \u91CD\u65B0\u8BBE\u7F6E\u67D0\u9879</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">void</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">offsetUnset</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$index</span> <span class="token punctuation">)</span> <span class="token comment">// \u590D\u4F4D\u4E00\u4E2A\u504F\u79FB\u4F4D\u7F6E\u7684\u503C</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">mixed</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">pop</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u5F39\u51FA\u6700\u540E\u4E00\u4E2A\u503C</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">void</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">prev</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u4E0A\u4E00\u9879</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">void</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">push</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$value</span> <span class="token punctuation">)</span> <span class="token comment">// \u8BE5\u65B9\u6CD5\u662F\u5728\u6808\u7684\u6700\u540E\u6DFB\u52A0\u4E00\u4E2A\u503C</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">void</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">rewind</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u91CD\u7F6E\u8FED\u4EE3\u5668</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">string</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">serialize</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u5E8F\u5217\u5316</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">void</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">setIteratorMode</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">int</span> <span class="token variable">$mode</span> <span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">mixed</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">shift</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u5F39\u51FA\u7B2C\u4E00\u4E2A\u503C</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">mixed</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">top</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u6700\u540E\u4E00\u4E2A\u503C</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">void</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">unserialize</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">string</span> <span class="token variable">$serialized</span> <span class="token punctuation">)</span> <span class="token comment">// \u53CD\u5E8F\u5217\u5316</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">void</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">unshift</span> <span class="token punctuation">(</span> <span class="token keyword type-hint">mixed</span> <span class="token variable">$value</span> <span class="token punctuation">)</span> <span class="token comment">// \u628A\u4E00\u4E2A\u503C\u538B\u5165\u6700\u5E95\u90E8</span>
<span class="token keyword">public</span> <span class="token keyword type-declaration">bool</span> <span class="token class-name static-context">SplDoublyLinkedList</span><span class="token operator">::</span><span class="token function">valid</span> <span class="token punctuation">(</span> <span class="token keyword type-declaration">void</span> <span class="token punctuation">)</span> <span class="token comment">// \u68C0\u67E5\u662F\u5426\u53CC\u6302\u94A9\u5217\u8868\u5305\u542B\u66F4\u591A\u7684\u8282\u70B9</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u6D4B\u8BD5\u7684\u4F8B\u5B50\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

  <span class="token comment">// $stack = new SplStack();</span>
  <span class="token comment">//</span>
  <span class="token comment">// $stack-&gt;add(0, &#39;test0&#39;);</span>
  <span class="token comment">//</span>
  <span class="token comment">// for($i = 1; $i &lt; 10; $i ++) {</span>
  <span class="token comment">//   $stack-&gt;push(&#39;test&#39;.$i);</span>
  <span class="token comment">// }</span>
  <span class="token comment">// $stack-&gt;add(5, &#39;test11&#39;);// 5 add test11</span>
  <span class="token comment">// // var_dump($stack-&gt;current());</span>
  <span class="token comment">// // var_dump($stack);</span>
  <span class="token comment">// // var_dump($stack-&gt;next());</span>
  <span class="token comment">// // var_dump($stack-&gt;offsetExists());</span>
  <span class="token comment">// // var_dump($stack-&gt;pop());</span>
  <span class="token comment">// // var_dump($stack-&gt;rewind());</span>
  <span class="token comment">// var_dump($stack-&gt;valid());</span>


  <span class="token comment">//======================================</span>
  <span class="token comment">//======================================</span>
  <span class="token variable">$stack</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SplStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u5B9E\u4F8B\u5316\u5806\u6808</span>
  <span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//\u5411\u5806\u6808\u4E2D\u52A0\u5165\u6570\u636E</span>
  <span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/*
  $stack-&gt;offsetSet(0,&#39;C&#39;);  //\u5806\u6808\u7684\u8282\u70B90\u662Ftop \u7684\u8282\u70B9\uFF0C\u8BBE\u7F6E\u8282\u70B9\u7684\u503C
  $stack-&gt;rewind(); //\u53CC\u5411\u94FE\u8868\u7684rewind\u548C\u5806\u6808\u7684rewind\u76F8\u53CD\uFF0C\u5806\u6808\u7684rewind\u4F7F\u5F97\u5F53\u524D\u6307\u9488\u6307\u5411TOP\u6240\u5728\u7684\u4F4D\u7F6E\uFF0C\u800C\u53CC\u5411\u94FE\u8868\u8C03\u7528\u4E4B\u540E\u6307\u5411bottom\u6240\u5728\u7684\u4F4D\u7F6E


  echo &quot;qq&quot;.$stack-&gt;next();  // \u5806\u6808\u7684next\u4E0E\u53CC\u5411\u94FE\u8868\u76F8\u53CD
  echo &quot;re&quot;.$stack-&gt;current().&quot;&lt;/br&gt;&quot;;
  //echo &quot;bo&quot;.$stack-&gt;bottom().&quot;&lt;/br&gt;&quot;;
  //echo &quot;top&quot;.$stack-&gt;top();

  print_r($stack);
  */</span>
  <span class="token comment">//\u4ECETOP\u5F00\u59CB\u904D\u5386</span>
  <span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">valid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">echo</span> <span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;=&gt;&quot;</span><span class="token operator">.</span><span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;/br&gt;&quot;</span><span class="token punctuation">;</span>
      <span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token variable">$pop</span> <span class="token operator">=</span> <span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">echo</span> <span class="token variable">$pop</span><span class="token punctuation">;</span>
  <span class="token comment">//pop\u64CD\u4F5C\u4ECE\u5806\u6808\u91CC\u9762\u63D0\u53D6\u51FA\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF08TOP\u4F4D\u7F6E\uFF09\uFF0C\u540C\u65F6\u5728\u5806\u6808\u5220\u9664\u8BE5\u8282\u70B9</span>
 <span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u662F\u4E00\u9053\u725B\u5BA2\u7F51\u7B97\u6CD5\u7684\u5B9E\u4F8B\u9898\u76EE:</p><blockquote><p>\u9898\u76EE\u63CF\u8FF0: \u8F93\u5165\u4E24\u4E2A\u6574\u6570\u5E8F\u5217\uFF0C\u7B2C\u4E00\u4E2A\u5E8F\u5217\u8868\u793A\u6808\u7684\u538B\u5165\u987A\u5E8F\uFF0C\u8BF7\u5224\u65AD\u7B2C\u4E8C\u4E2A\u5E8F\u5217\u662F\u5426\u53EF\u80FD\u4E3A\u8BE5\u6808\u7684\u5F39\u51FA\u987A\u5E8F\u3002\u5047\u8BBE\u538B\u5165\u6808\u7684\u6240\u6709\u6570\u5B57\u5747\u4E0D\u76F8\u7B49\u3002\u4F8B\u5982\u5E8F\u52171,2,3,4,5\u662F\u67D0\u6808\u7684\u538B\u5165\u987A\u5E8F\uFF0C\u5E8F\u52174,5,3,2,1\u662F\u8BE5\u538B\u6808\u5E8F\u5217\u5BF9\u5E94\u7684\u4E00\u4E2A\u5F39\u51FA\u5E8F\u5217\uFF0C\u4F464,3,5,1,2\u5C31\u4E0D\u53EF\u80FD\u662F\u8BE5\u538B\u6808\u5E8F\u5217\u7684\u5F39\u51FA\u5E8F\u5217\u3002\uFF08\u6CE8\u610F\uFF1A\u8FD9\u4E24\u4E2A\u5E8F\u5217\u7684\u957F\u5EA6\u662F\u76F8\u7B49\u7684\uFF09</p></blockquote><p>\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">IsPopOrder</span><span class="token punctuation">(</span><span class="token variable">$pushV</span><span class="token punctuation">,</span> <span class="token variable">$popV</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token comment">// write code here</span>
  <span class="token variable">$stack</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SplStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$length</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$pushV</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token variable">$pushV</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$popV</span><span class="token punctuation">[</span><span class="token variable">$j</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token variable">$j</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token variable">$stack</span><span class="token operator">-&gt;</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u539F\u7406\u662F\u62FF\u5230\u5F39\u51FA\u987A\u5E8F\u7684\u6BCF\u4E00\u4E2A\u503C\u53BB\u5BF9\u6BD4\u6808\u7684\u538B\u5165\u987A\u5E8F\uFF0C\u5982\u679C\u662F\uFF0C\u4ECE\u6808\u91CC\u5254\u9664\u3002</p>`,11);function p(e,o){return t}var l=n(a,[["render",p],["__file","php-SplStack.html.vue"]]);export{l as default};
